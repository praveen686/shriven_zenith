#!/bin/bash
# Pre-commit hook for Claude Auditor
# Ensures code compliance before allowing commits

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}===============================================${NC}"
echo -e "${GREEN}Running Claude Auditor Pre-Commit Check...${NC}"
echo -e "${GREEN}===============================================${NC}"

# Build the auditor if not already built
if [ ! -f "cmake/build-strict-debug/auditor/claude_audit" ]; then
    echo -e "${YELLOW}Building Claude Auditor...${NC}"
    cd cmake/build-strict-debug
    cmake ../.. -DCMAKE_BUILD_TYPE=Debug
    ninja claude_audit
    cd ../..
fi

# Run the auditor
./cmake/build-strict-debug/auditor/claude_audit \
    --pre-commit \
    --source . \
    --fail-on-high \
    --junit .audit/junit.xml \
    --json .audit/violations.json

AUDIT_EXIT_CODE=$?

if [ $AUDIT_EXIT_CODE -ne 0 ]; then
    echo -e "${RED}===============================================${NC}"
    echo -e "${RED}❌ COMMIT BLOCKED - Code violations detected${NC}"
    echo -e "${RED}===============================================${NC}"
    echo ""
    echo "Critical violations must be fixed before committing."
    echo "See audit_report.txt for details."
    echo ""
    echo "To bypass (NOT RECOMMENDED):"
    echo "  git commit --no-verify"
    echo ""
    exit $AUDIT_EXIT_CODE
fi

echo -e "${GREEN}✅ Pre-commit audit PASSED${NC}"

# Additional checks
echo -e "${YELLOW}Running additional checks...${NC}"

# Check for compiler warnings
echo "Checking for compiler warnings..."
if grep -r "warning:" cmake/build-strict-debug/*.log 2>/dev/null; then
    echo -e "${RED}❌ Compiler warnings found${NC}"
    exit 1
fi

# Check for TODO comments
TODO_COUNT=$(grep -r "TODO\|FIXME\|XXX\|HACK" --include="*.cpp" --include="*.h" . | wc -l)
if [ $TODO_COUNT -gt 0 ]; then
    echo -e "${YELLOW}⚠️  Found $TODO_COUNT TODO/FIXME comments${NC}"
fi

# Check for stub functions
STUB_COUNT=$(grep -r "// STUB\|return nullptr;\|not implemented" --include="*.cpp" --include="*.h" . | wc -l)
if [ $STUB_COUNT -gt 0 ]; then
    echo -e "${YELLOW}⚠️  Found $STUB_COUNT stub functions${NC}"
fi

echo -e "${GREEN}===============================================${NC}"
echo -e "${GREEN}✅ All checks PASSED - Commit allowed${NC}"
echo -e "${GREEN}===============================================${NC}"

exit 0